Make text dropdown in markdown
```
<details>
<summary>How do I dropdown?</summary>
<br>
This is how you dropdown.
</details>


<details open>
<summary>I automatically open</summary>
<br>
Waaa, you see me. I thought I would be hidden ;p .
</details>
```

use a dropdown for getting articles that have titles that are smaller than expected length that begin with original url

making unique current links
instead of parsing for dates, simply compare list of links to previous day's links, if links already exist, remove from list to get current links

keeping unique links - if links are different every day, what if someone doesn't post for a month? their latest article will appear every other day on the markdown headlines document.

data analytics - make a dropdown in markdown with analytics of the headlines - most common words that are at least 4 letters, 



waiting for content on website to fully load (separate task from link collection)

use splashJS

```
docker pull scrapinghub/splash
docker run -it -p 8050:8050 --rm scrapinghub/splash
```

```
import requests

def render_with_splash(url, wait=2):
  """Renders a webpage using Splash and returns the HTML content."""
  splash_url = "http://localhost:8050/render.html"
  params = {"url": url, "wait": wait}
  response = requests.get(splash_url, params=params)
  return response.text

# Example usage:
url_to_render = "https://example.com"
rendered_html = render_with_splash(url_to_render)
print(rendered_html)
```